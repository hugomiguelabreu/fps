// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interserver.proto

package Network;

public final class Interserver {
  private Interserver() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InterServerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Network.InterServerMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes torrentHexId = 1;</code>
     */
    com.google.protobuf.ByteString getTorrentHexId();

    /**
     * <code>bool type_op = 2;</code>
     */
    boolean getTypeOp();

    /**
     * <code>bytes server_ip = 3;</code>
     */
    com.google.protobuf.ByteString getServerIp();

    /**
     * <code>int32 server_cli_port = 4;</code>
     */
    int getServerCliPort();
  }
  /**
   * Protobuf type {@code Network.InterServerMessage}
   */
  public  static final class InterServerMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Network.InterServerMessage)
      InterServerMessageOrBuilder {
    // Use InterServerMessage.newBuilder() to construct.
    private InterServerMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InterServerMessage() {
      torrentHexId_ = com.google.protobuf.ByteString.EMPTY;
      typeOp_ = false;
      serverIp_ = com.google.protobuf.ByteString.EMPTY;
      serverCliPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private InterServerMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {

              torrentHexId_ = input.readBytes();
              break;
            }
            case 16: {

              typeOp_ = input.readBool();
              break;
            }
            case 26: {

              serverIp_ = input.readBytes();
              break;
            }
            case 32: {

              serverCliPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Network.Interserver.internal_static_Network_InterServerMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Network.Interserver.internal_static_Network_InterServerMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Network.Interserver.InterServerMessage.class, Network.Interserver.InterServerMessage.Builder.class);
    }

    public static final int TORRENTHEXID_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString torrentHexId_;
    /**
     * <code>bytes torrentHexId = 1;</code>
     */
    public com.google.protobuf.ByteString getTorrentHexId() {
      return torrentHexId_;
    }

    public static final int TYPE_OP_FIELD_NUMBER = 2;
    private boolean typeOp_;
    /**
     * <code>bool type_op = 2;</code>
     */
    public boolean getTypeOp() {
      return typeOp_;
    }

    public static final int SERVER_IP_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString serverIp_;
    /**
     * <code>bytes server_ip = 3;</code>
     */
    public com.google.protobuf.ByteString getServerIp() {
      return serverIp_;
    }

    public static final int SERVER_CLI_PORT_FIELD_NUMBER = 4;
    private int serverCliPort_;
    /**
     * <code>int32 server_cli_port = 4;</code>
     */
    public int getServerCliPort() {
      return serverCliPort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!torrentHexId_.isEmpty()) {
        output.writeBytes(1, torrentHexId_);
      }
      if (typeOp_ != false) {
        output.writeBool(2, typeOp_);
      }
      if (!serverIp_.isEmpty()) {
        output.writeBytes(3, serverIp_);
      }
      if (serverCliPort_ != 0) {
        output.writeInt32(4, serverCliPort_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!torrentHexId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, torrentHexId_);
      }
      if (typeOp_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, typeOp_);
      }
      if (!serverIp_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, serverIp_);
      }
      if (serverCliPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, serverCliPort_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Network.Interserver.InterServerMessage)) {
        return super.equals(obj);
      }
      Network.Interserver.InterServerMessage other = (Network.Interserver.InterServerMessage) obj;

      boolean result = true;
      result = result && getTorrentHexId()
          .equals(other.getTorrentHexId());
      result = result && (getTypeOp()
          == other.getTypeOp());
      result = result && getServerIp()
          .equals(other.getServerIp());
      result = result && (getServerCliPort()
          == other.getServerCliPort());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TORRENTHEXID_FIELD_NUMBER;
      hash = (53 * hash) + getTorrentHexId().hashCode();
      hash = (37 * hash) + TYPE_OP_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getTypeOp());
      hash = (37 * hash) + SERVER_IP_FIELD_NUMBER;
      hash = (53 * hash) + getServerIp().hashCode();
      hash = (37 * hash) + SERVER_CLI_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getServerCliPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Network.Interserver.InterServerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Network.Interserver.InterServerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Network.Interserver.InterServerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Network.Interserver.InterServerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Network.Interserver.InterServerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Network.Interserver.InterServerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Network.Interserver.InterServerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Network.Interserver.InterServerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Network.Interserver.InterServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Network.Interserver.InterServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Network.Interserver.InterServerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Network.InterServerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Network.InterServerMessage)
        Network.Interserver.InterServerMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Network.Interserver.internal_static_Network_InterServerMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Network.Interserver.internal_static_Network_InterServerMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Network.Interserver.InterServerMessage.class, Network.Interserver.InterServerMessage.Builder.class);
      }

      // Construct using Network.Interserver.InterServerMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        torrentHexId_ = com.google.protobuf.ByteString.EMPTY;

        typeOp_ = false;

        serverIp_ = com.google.protobuf.ByteString.EMPTY;

        serverCliPort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Network.Interserver.internal_static_Network_InterServerMessage_descriptor;
      }

      public Network.Interserver.InterServerMessage getDefaultInstanceForType() {
        return Network.Interserver.InterServerMessage.getDefaultInstance();
      }

      public Network.Interserver.InterServerMessage build() {
        Network.Interserver.InterServerMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Network.Interserver.InterServerMessage buildPartial() {
        Network.Interserver.InterServerMessage result = new Network.Interserver.InterServerMessage(this);
        result.torrentHexId_ = torrentHexId_;
        result.typeOp_ = typeOp_;
        result.serverIp_ = serverIp_;
        result.serverCliPort_ = serverCliPort_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Network.Interserver.InterServerMessage) {
          return mergeFrom((Network.Interserver.InterServerMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Network.Interserver.InterServerMessage other) {
        if (other == Network.Interserver.InterServerMessage.getDefaultInstance()) return this;
        if (other.getTorrentHexId() != com.google.protobuf.ByteString.EMPTY) {
          setTorrentHexId(other.getTorrentHexId());
        }
        if (other.getTypeOp() != false) {
          setTypeOp(other.getTypeOp());
        }
        if (other.getServerIp() != com.google.protobuf.ByteString.EMPTY) {
          setServerIp(other.getServerIp());
        }
        if (other.getServerCliPort() != 0) {
          setServerCliPort(other.getServerCliPort());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Network.Interserver.InterServerMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Network.Interserver.InterServerMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString torrentHexId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes torrentHexId = 1;</code>
       */
      public com.google.protobuf.ByteString getTorrentHexId() {
        return torrentHexId_;
      }
      /**
       * <code>bytes torrentHexId = 1;</code>
       */
      public Builder setTorrentHexId(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        torrentHexId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes torrentHexId = 1;</code>
       */
      public Builder clearTorrentHexId() {
        
        torrentHexId_ = getDefaultInstance().getTorrentHexId();
        onChanged();
        return this;
      }

      private boolean typeOp_ ;
      /**
       * <code>bool type_op = 2;</code>
       */
      public boolean getTypeOp() {
        return typeOp_;
      }
      /**
       * <code>bool type_op = 2;</code>
       */
      public Builder setTypeOp(boolean value) {
        
        typeOp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool type_op = 2;</code>
       */
      public Builder clearTypeOp() {
        
        typeOp_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString serverIp_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes server_ip = 3;</code>
       */
      public com.google.protobuf.ByteString getServerIp() {
        return serverIp_;
      }
      /**
       * <code>bytes server_ip = 3;</code>
       */
      public Builder setServerIp(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes server_ip = 3;</code>
       */
      public Builder clearServerIp() {
        
        serverIp_ = getDefaultInstance().getServerIp();
        onChanged();
        return this;
      }

      private int serverCliPort_ ;
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public int getServerCliPort() {
        return serverCliPort_;
      }
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public Builder setServerCliPort(int value) {
        
        serverCliPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public Builder clearServerCliPort() {
        
        serverCliPort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:Network.InterServerMessage)
    }

    // @@protoc_insertion_point(class_scope:Network.InterServerMessage)
    private static final Network.Interserver.InterServerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Network.Interserver.InterServerMessage();
    }

    public static Network.Interserver.InterServerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InterServerMessage>
        PARSER = new com.google.protobuf.AbstractParser<InterServerMessage>() {
      public InterServerMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new InterServerMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InterServerMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InterServerMessage> getParserForType() {
      return PARSER;
    }

    public Network.Interserver.InterServerMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Network_InterServerMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Network_InterServerMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Interserver.proto\022\007Network\"g\n\022InterSer" +
      "verMessage\022\024\n\014torrentHexId\030\001 \001(\014\022\017\n\007type" +
      "_op\030\002 \001(\010\022\021\n\tserver_ip\030\003 \001(\014\022\027\n\017server_c" +
      "li_port\030\004 \001(\005b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Network_InterServerMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Network_InterServerMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Network_InterServerMessage_descriptor,
        new java.lang.String[] { "TorrentHexId", "TypeOp", "ServerIp", "ServerCliPort", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
