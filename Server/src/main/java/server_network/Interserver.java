// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interserver.proto

package server_network;

public final class Interserver {
  private Interserver() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ServerMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:server_network.ServerMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string torrentHexId = 1;</code>
     */
    java.lang.String getTorrentHexId();
    /**
     * <code>string torrentHexId = 1;</code>
     */
    com.google.protobuf.ByteString
        getTorrentHexIdBytes();

    /**
     * <code>.server_network.ServerMessage.Type type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>.server_network.ServerMessage.Type type = 2;</code>
     */
    server_network.Interserver.ServerMessage.Type getType();

    /**
     * <code>string server_ip = 3;</code>
     */
    java.lang.String getServerIp();
    /**
     * <code>string server_ip = 3;</code>
     */
    com.google.protobuf.ByteString
        getServerIpBytes();

    /**
     * <code>int32 server_cli_port = 4;</code>
     */
    int getServerCliPort();
  }
  /**
   * Protobuf type {@code server_network.ServerMessage}
   */
  public  static final class ServerMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:server_network.ServerMessage)
      ServerMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ServerMessage.newBuilder() to construct.
    private ServerMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ServerMessage() {
      torrentHexId_ = "";
      type_ = 0;
      serverIp_ = "";
      serverCliPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ServerMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              torrentHexId_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              serverIp_ = s;
              break;
            }
            case 32: {

              serverCliPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return server_network.Interserver.internal_static_server_network_ServerMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return server_network.Interserver.internal_static_server_network_ServerMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              server_network.Interserver.ServerMessage.class, server_network.Interserver.ServerMessage.Builder.class);
    }

    /**
     * Protobuf enum {@code server_network.ServerMessage.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * I need the file
       * </pre>
       *
       * <code>GET = 0;</code>
       */
      GET(0),
      /**
       * <pre>
       * I deleted the file
       * </pre>
       *
       * <code>DELETE = 1;</code>
       */
      DELETE(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * I need the file
       * </pre>
       *
       * <code>GET = 0;</code>
       */
      public static final int GET_VALUE = 0;
      /**
       * <pre>
       * I deleted the file
       * </pre>
       *
       * <code>DELETE = 1;</code>
       */
      public static final int DELETE_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return GET;
          case 1: return DELETE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return server_network.Interserver.ServerMessage.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:server_network.ServerMessage.Type)
    }

    public static final int TORRENTHEXID_FIELD_NUMBER = 1;
    private volatile java.lang.Object torrentHexId_;
    /**
     * <code>string torrentHexId = 1;</code>
     */
    public java.lang.String getTorrentHexId() {
      java.lang.Object ref = torrentHexId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        torrentHexId_ = s;
        return s;
      }
    }
    /**
     * <code>string torrentHexId = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTorrentHexIdBytes() {
      java.lang.Object ref = torrentHexId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        torrentHexId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>.server_network.ServerMessage.Type type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.server_network.ServerMessage.Type type = 2;</code>
     */
    public server_network.Interserver.ServerMessage.Type getType() {
      server_network.Interserver.ServerMessage.Type result = server_network.Interserver.ServerMessage.Type.valueOf(type_);
      return result == null ? server_network.Interserver.ServerMessage.Type.UNRECOGNIZED : result;
    }

    public static final int SERVER_IP_FIELD_NUMBER = 3;
    private volatile java.lang.Object serverIp_;
    /**
     * <code>string server_ip = 3;</code>
     */
    public java.lang.String getServerIp() {
      java.lang.Object ref = serverIp_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        serverIp_ = s;
        return s;
      }
    }
    /**
     * <code>string server_ip = 3;</code>
     */
    public com.google.protobuf.ByteString
        getServerIpBytes() {
      java.lang.Object ref = serverIp_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        serverIp_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERVER_CLI_PORT_FIELD_NUMBER = 4;
    private int serverCliPort_;
    /**
     * <code>int32 server_cli_port = 4;</code>
     */
    public int getServerCliPort() {
      return serverCliPort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTorrentHexIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, torrentHexId_);
      }
      if (type_ != server_network.Interserver.ServerMessage.Type.GET.getNumber()) {
        output.writeEnum(2, type_);
      }
      if (!getServerIpBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, serverIp_);
      }
      if (serverCliPort_ != 0) {
        output.writeInt32(4, serverCliPort_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTorrentHexIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, torrentHexId_);
      }
      if (type_ != server_network.Interserver.ServerMessage.Type.GET.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      if (!getServerIpBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, serverIp_);
      }
      if (serverCliPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, serverCliPort_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof server_network.Interserver.ServerMessage)) {
        return super.equals(obj);
      }
      server_network.Interserver.ServerMessage other = (server_network.Interserver.ServerMessage) obj;

      boolean result = true;
      result = result && getTorrentHexId()
          .equals(other.getTorrentHexId());
      result = result && type_ == other.type_;
      result = result && getServerIp()
          .equals(other.getServerIp());
      result = result && (getServerCliPort()
          == other.getServerCliPort());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TORRENTHEXID_FIELD_NUMBER;
      hash = (53 * hash) + getTorrentHexId().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + SERVER_IP_FIELD_NUMBER;
      hash = (53 * hash) + getServerIp().hashCode();
      hash = (37 * hash) + SERVER_CLI_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getServerCliPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static server_network.Interserver.ServerMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static server_network.Interserver.ServerMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static server_network.Interserver.ServerMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static server_network.Interserver.ServerMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static server_network.Interserver.ServerMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static server_network.Interserver.ServerMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(server_network.Interserver.ServerMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code server_network.ServerMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:server_network.ServerMessage)
        server_network.Interserver.ServerMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return server_network.Interserver.internal_static_server_network_ServerMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return server_network.Interserver.internal_static_server_network_ServerMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                server_network.Interserver.ServerMessage.class, server_network.Interserver.ServerMessage.Builder.class);
      }

      // Construct using server_network.Interserver.ServerMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        torrentHexId_ = "";

        type_ = 0;

        serverIp_ = "";

        serverCliPort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return server_network.Interserver.internal_static_server_network_ServerMessage_descriptor;
      }

      public server_network.Interserver.ServerMessage getDefaultInstanceForType() {
        return server_network.Interserver.ServerMessage.getDefaultInstance();
      }

      public server_network.Interserver.ServerMessage build() {
        server_network.Interserver.ServerMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public server_network.Interserver.ServerMessage buildPartial() {
        server_network.Interserver.ServerMessage result = new server_network.Interserver.ServerMessage(this);
        result.torrentHexId_ = torrentHexId_;
        result.type_ = type_;
        result.serverIp_ = serverIp_;
        result.serverCliPort_ = serverCliPort_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof server_network.Interserver.ServerMessage) {
          return mergeFrom((server_network.Interserver.ServerMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(server_network.Interserver.ServerMessage other) {
        if (other == server_network.Interserver.ServerMessage.getDefaultInstance()) return this;
        if (!other.getTorrentHexId().isEmpty()) {
          torrentHexId_ = other.torrentHexId_;
          onChanged();
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (!other.getServerIp().isEmpty()) {
          serverIp_ = other.serverIp_;
          onChanged();
        }
        if (other.getServerCliPort() != 0) {
          setServerCliPort(other.getServerCliPort());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        server_network.Interserver.ServerMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (server_network.Interserver.ServerMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object torrentHexId_ = "";
      /**
       * <code>string torrentHexId = 1;</code>
       */
      public java.lang.String getTorrentHexId() {
        java.lang.Object ref = torrentHexId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          torrentHexId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string torrentHexId = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTorrentHexIdBytes() {
        java.lang.Object ref = torrentHexId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          torrentHexId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string torrentHexId = 1;</code>
       */
      public Builder setTorrentHexId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        torrentHexId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string torrentHexId = 1;</code>
       */
      public Builder clearTorrentHexId() {
        
        torrentHexId_ = getDefaultInstance().getTorrentHexId();
        onChanged();
        return this;
      }
      /**
       * <code>string torrentHexId = 1;</code>
       */
      public Builder setTorrentHexIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        torrentHexId_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>.server_network.ServerMessage.Type type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.server_network.ServerMessage.Type type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.server_network.ServerMessage.Type type = 2;</code>
       */
      public server_network.Interserver.ServerMessage.Type getType() {
        server_network.Interserver.ServerMessage.Type result = server_network.Interserver.ServerMessage.Type.valueOf(type_);
        return result == null ? server_network.Interserver.ServerMessage.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.server_network.ServerMessage.Type type = 2;</code>
       */
      public Builder setType(server_network.Interserver.ServerMessage.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.server_network.ServerMessage.Type type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object serverIp_ = "";
      /**
       * <code>string server_ip = 3;</code>
       */
      public java.lang.String getServerIp() {
        java.lang.Object ref = serverIp_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          serverIp_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string server_ip = 3;</code>
       */
      public com.google.protobuf.ByteString
          getServerIpBytes() {
        java.lang.Object ref = serverIp_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          serverIp_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string server_ip = 3;</code>
       */
      public Builder setServerIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        serverIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string server_ip = 3;</code>
       */
      public Builder clearServerIp() {
        
        serverIp_ = getDefaultInstance().getServerIp();
        onChanged();
        return this;
      }
      /**
       * <code>string server_ip = 3;</code>
       */
      public Builder setServerIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        serverIp_ = value;
        onChanged();
        return this;
      }

      private int serverCliPort_ ;
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public int getServerCliPort() {
        return serverCliPort_;
      }
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public Builder setServerCliPort(int value) {
        
        serverCliPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 server_cli_port = 4;</code>
       */
      public Builder clearServerCliPort() {
        
        serverCliPort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:server_network.ServerMessage)
    }

    // @@protoc_insertion_point(class_scope:server_network.ServerMessage)
    private static final server_network.Interserver.ServerMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new server_network.Interserver.ServerMessage();
    }

    public static server_network.Interserver.ServerMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServerMessage>
        PARSER = new com.google.protobuf.AbstractParser<ServerMessage>() {
      public ServerMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ServerMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ServerMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServerMessage> getParserForType() {
      return PARSER;
    }

    public server_network.Interserver.ServerMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_server_network_ServerMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_server_network_ServerMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021Interserver.proto\022\016server_network\"\240\001\n\r" +
      "ServerMessage\022\024\n\014torrentHexId\030\001 \001(\t\0220\n\004t" +
      "ype\030\002 \001(\0162\".server_network.ServerMessage" +
      ".Type\022\021\n\tserver_ip\030\003 \001(\t\022\027\n\017server_cli_p" +
      "ort\030\004 \001(\005\"\033\n\004Type\022\007\n\003GET\020\000\022\n\n\006DELETE\020\001b\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_server_network_ServerMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_server_network_ServerMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_server_network_ServerMessage_descriptor,
        new java.lang.String[] { "TorrentHexId", "Type", "ServerIp", "ServerCliPort", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
